<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fl.sp.mapper.SReplyMapper">
    <resultMap id="BaseResultMap" type="com.fl.sp.model.SReply">
        <result column="rid" property="rid" jdbcType="VARCHAR"/>
        <result column="pguid" property="pguid" jdbcType="VARCHAR"/>
        <result column="displayname" property="displayname" jdbcType="NVARCHAR"/>
        <result column="openid" property="openid" jdbcType="VARCHAR"/>
        <result column="tel" property="tel" jdbcType="VARCHAR"/>
        <result column="company" property="company" jdbcType="NVARCHAR"/>
        <result column="sid" property="sid" jdbcType="VARCHAR"/>
        <result column="qid" property="qid" jdbcType="VARCHAR"/>
        <result column="atext" property="atext" jdbcType="NVARCHAR"/>
        <result column="createtime" property="createtime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    rid, pguid, displayname, openid, tel, company, sid, qid, atext, createtime
  </sql>
    <select id="selectIsReply" resultMap="BaseResultMap">
        select rid from s_reply where tel=#{tel,jdbcType=VARCHAR} and sid=#{sid,jdbcType=VARCHAR}
    </select>
    <select id="selectIsReplyByOpenid" resultMap="BaseResultMap">
        select rid from s_reply where openid=#{openid,jdbcType=VARCHAR} and sid=#{sid,jdbcType=VARCHAR}
    </select>
    <insert id="insert" parameterType="com.fl.sp.model.SReply">
        insert into s_reply (rid, pguid, displayname,
        openid, tel, company,
        sid, qid, atext, createtime
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.rid,jdbcType=VARCHAR}, #{item.pguid,jdbcType=VARCHAR}, #{item.displayname,jdbcType=NVARCHAR},
            #{item.openid,jdbcType=VARCHAR}, #{item.tel,jdbcType=VARCHAR}, #{item.company,jdbcType=NVARCHAR},
            #{item.sid,jdbcType=VARCHAR}, #{item.qid,jdbcType=VARCHAR}, #{item.atext,jdbcType=NVARCHAR},
            #{item.createtime,jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>
</mapper>